/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole;

import Business.Course.CourseDirectory;
import Business.Database.SQLiteDatabaseConnection;
import Business.Faculty.ProfessorDirectory;
import Business.Person.PersonDirectory;
import Business.Student.CourseRegistered;
import Business.Student.Student;
import Business.Student.StudentDirectory;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raisi
 */
public class StudentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentJPanel
     */
    Student student;
    private CourseDirectory managecourse;
    private JPanel homeJPanel;
    private ProfessorDirectory manageprofessor;
    private StudentDirectory managestudent;
    private CourseRegistered registeredcourses;
    private PersonDirectory manageperson;
    Connection conn;


    public StudentJPanel(JPanel homeJPanel, ProfessorDirectory manageprofessor, CourseDirectory managecourse, StudentDirectory managestudent, PersonDirectory manageperson) {
        initComponents();
        this.homeJPanel = homeJPanel;
        this.managecourse = managecourse;
        this.managestudent = managestudent;
        this.manageprofessor = manageprofessor;
        this.manageperson = manageperson;
        findStudent();
        displayStudentProfileDetails();
        displayCourseRegistrationDetails();
        displayViewCourseDetails();
        displayDeclarationDetails();
        displayRateProfessorDetails();
        displayDropProfessorDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        splitPane = new javax.swing.JSplitPane();
        studentLogoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        professorPanelLabel = new javax.swing.JLabel();
        studentPanel = new javax.swing.JPanel();
        studentTabbedPanel = new javax.swing.JTabbedPane();
        studentHomeJPanel = new javax.swing.JPanel();
        studentHomeLabel = new javax.swing.JLabel();
        studentHomeLogo = new javax.swing.JLabel();
        studentProfileJPanel = new javax.swing.JPanel();
        lblStudentID = new javax.swing.JLabel();
        txtStudentID = new javax.swing.JTextField();
        lblStudentName = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        lblStudentAge = new javax.swing.JLabel();
        txtStudentAge = new javax.swing.JTextField();
        lblStudentAddress = new javax.swing.JLabel();
        lblStudentContact = new javax.swing.JLabel();
        txtStudentContact = new javax.swing.JTextField();
        lblStudentEmail = new javax.swing.JLabel();
        txtStudentEmail = new javax.swing.JTextField();
        lblStudentRegistered = new javax.swing.JLabel();
        txtStudentRegistered = new javax.swing.JTextField();
        jSeparator = new javax.swing.JSeparator();
        lblStudentUpdate = new javax.swing.JLabel();
        lblUpdateCredentials = new javax.swing.JLabel();
        lblStudentPreviousPassword = new javax.swing.JLabel();
        lblStudentNewPassword = new javax.swing.JLabel();
        lblStudentConfirmPassword = new javax.swing.JLabel();
        btnUpdatePassword = new javax.swing.JButton();
        previousPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        confirmNewPassword = new javax.swing.JPasswordField();
        btnSave = new javax.swing.JButton();
        txtStudentRegion = new javax.swing.JTextField();
        studentCourseRegistrationJPanel = new javax.swing.JPanel();
        lblSearchProfessor = new javax.swing.JLabel();
        lblSearchTopic = new javax.swing.JLabel();
        lblSearchRegion = new javax.swing.JLabel();
        lblSeachLanguage = new javax.swing.JLabel();
        comboCourseProfessor = new javax.swing.JComboBox<>();
        comboCourseTopic = new javax.swing.JComboBox<>();
        comboCourseRegion = new javax.swing.JComboBox<>();
        comboCourseLangauge = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseDetails = new javax.swing.JTable();
        btnSearchCourse = new javax.swing.JButton();
        btnAddCourse = new javax.swing.JButton();
        studentViewCourseJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblViewRegisteredCourses = new javax.swing.JTable();
        btnManageCourse = new javax.swing.JButton();
        txtViewCourseID = new javax.swing.JTextField();
        lblViewCourseID = new javax.swing.JLabel();
        lblViewCourseName = new javax.swing.JLabel();
        txtViewCourseName = new javax.swing.JTextField();
        lblViewProfessorName = new javax.swing.JLabel();
        lblViewGradeRequest = new javax.swing.JLabel();
        txtViewProfessorName = new javax.swing.JTextField();
        comboGrade = new javax.swing.JComboBox<>();
        btnSubmitGradeRequest = new javax.swing.JButton();
        lblRequest = new javax.swing.JLabel();
        lblNote = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        studentDropCourseJPanel = new javax.swing.JPanel();
        lblDropProfessorName = new javax.swing.JLabel();
        txtDropCourseName = new javax.swing.JTextField();
        lblDropCourseName = new javax.swing.JLabel();
        btnDropCourse = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblViewRegisteredCourseDrop = new javax.swing.JTable();
        btnManageDropProfessor = new javax.swing.JButton();
        txtDropProfessorName = new javax.swing.JTextField();
        txtDropCourseID = new javax.swing.JTextField();
        lblDropCourseID = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        studentRateProfessorJPanel = new javax.swing.JPanel();
        lblRateProfessorName = new javax.swing.JLabel();
        txtRateCourseName = new javax.swing.JTextField();
        lblRateCourseName = new javax.swing.JLabel();
        btnSubmitRateProfessor = new javax.swing.JButton();
        lblRateProfessor = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblViewRegisteredCoursesForGrade = new javax.swing.JTable();
        btnRateProfessor = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        txtProfessorNameGrade = new javax.swing.JTextField();
        lblrequestgrade = new javax.swing.JLabel();
        comboRateProfessor = new javax.swing.JComboBox<>();
        lblGradeCourseID = new javax.swing.JLabel();
        txtRateCourseID = new javax.swing.JTextField();
        studentDeclarationJPanel = new javax.swing.JPanel();
        text1 = new javax.swing.JLabel();
        txtDeclarationStudentName1 = new javax.swing.JTextField();
        text2 = new javax.swing.JLabel();
        text3 = new javax.swing.JLabel();
        text4 = new javax.swing.JLabel();
        txtDeclarationStudentName2 = new javax.swing.JTextField();
        text5 = new javax.swing.JLabel();
        text6 = new javax.swing.JLabel();
        text7 = new javax.swing.JLabel();
        txtDeclarationStudentPhone = new javax.swing.JTextField();
        text8 = new javax.swing.JLabel();
        txtDeclarationStudentEmail = new javax.swing.JTextField();
        chkDeclaration = new javax.swing.JCheckBox();
        text9 = new javax.swing.JLabel();
        txtDeclarationStudentName3 = new javax.swing.JTextField();
        txtDeclarationStudentID = new javax.swing.JTextField();
        btnSubmitDeclaration = new javax.swing.JButton();
        studentCertificateJPanel = new javax.swing.JPanel();
        text10 = new javax.swing.JLabel();
        txtCertificateStudentName = new javax.swing.JTextField();
        text11 = new javax.swing.JLabel();
        professorPanelLabel1 = new javax.swing.JLabel();
        lblogo = new javax.swing.JLabel();
        lblcertificateId = new javax.swing.JLabel();
        txtcertificateid = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        setBackground(new java.awt.Color(0, 0, 0));

        splitPane.setDividerLocation(130);
        splitPane.setDividerSize(1);
        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        studentLogoPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cloud-campus small logo 1.png"))); // NOI18N
        jLabel1.setText("LOGO");

        logoutBtn.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(102, 51, 0));
        logoutBtn.setText("LOGOUT");
        logoutBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logoutBtn.setContentAreaFilled(false);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        professorPanelLabel.setBackground(new java.awt.Color(255, 255, 255));
        professorPanelLabel.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        professorPanelLabel.setForeground(new java.awt.Color(102, 51, 0));
        professorPanelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        professorPanelLabel.setText("STUDENT LOGIN");

        javax.swing.GroupLayout studentLogoPanelLayout = new javax.swing.GroupLayout(studentLogoPanel);
        studentLogoPanel.setLayout(studentLogoPanelLayout);
        studentLogoPanelLayout.setHorizontalGroup(
            studentLogoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLogoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(professorPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        studentLogoPanelLayout.setVerticalGroup(
            studentLogoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLogoPanelLayout.createSequentialGroup()
                .addGroup(studentLogoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(professorPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        splitPane.setTopComponent(studentLogoPanel);

        studentPanel.setBackground(new java.awt.Color(255, 255, 255));

        studentTabbedPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentTabbedPanel.setForeground(new java.awt.Color(102, 51, 0));
        studentTabbedPanel.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N

        studentHomeJPanel.setBackground(new java.awt.Color(255, 255, 255));

        studentHomeLabel.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        studentHomeLabel.setForeground(new java.awt.Color(102, 51, 0));
        studentHomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        studentHomeLabel.setText("<html>Welcome to the Student Portal! Your all-in-one solution for managing your educational journey, efficiently coordinating your schedule, and connecting with professors and courses.  <br>Here, you'll find the tools and resources to enhance your academic experience, connect with your professors, and make the most of your educational opportunities.  <br>Let's embark on this journey together, ensuring you get the best out of your time in academia.</html>");

        studentHomeLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/studentHome.png"))); // NOI18N
        studentHomeLogo.setPreferredSize(new java.awt.Dimension(450, 325));

        javax.swing.GroupLayout studentHomeJPanelLayout = new javax.swing.GroupLayout(studentHomeJPanel);
        studentHomeJPanel.setLayout(studentHomeJPanelLayout);
        studentHomeJPanelLayout.setHorizontalGroup(
            studentHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentHomeJPanelLayout.createSequentialGroup()
                .addGroup(studentHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentHomeJPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(studentHomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentHomeJPanelLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(studentHomeLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        studentHomeJPanelLayout.setVerticalGroup(
            studentHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentHomeJPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(studentHomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(studentHomeLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Home", studentHomeJPanel);

        studentProfileJPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentProfileJPanel.setForeground(new java.awt.Color(102, 51, 0));

        lblStudentID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentID.setText("Student ID:");

        txtStudentID.setEditable(false);
        txtStudentID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblStudentName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentName.setText("Full Name:");

        txtStudentName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblStudentAge.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentAge.setText("Age:");

        txtStudentAge.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblStudentAddress.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentAddress.setText("Region:");

        lblStudentContact.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentContact.setText("Contact Number:");

        txtStudentContact.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblStudentEmail.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentEmail.setText("Email Address:");

        txtStudentEmail.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblStudentRegistered.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentRegistered.setText("Registered for Courses:");

        txtStudentRegistered.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        jSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblStudentUpdate.setFont(new java.awt.Font("Cambria Math", 1, 16)); // NOI18N
        lblStudentUpdate.setForeground(new java.awt.Color(102, 51, 0));
        lblStudentUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStudentUpdate.setText("Update Basic Details");

        lblUpdateCredentials.setFont(new java.awt.Font("Cambria Math", 1, 16)); // NOI18N
        lblUpdateCredentials.setForeground(new java.awt.Color(102, 51, 0));
        lblUpdateCredentials.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdateCredentials.setText("Update Password");

        lblStudentPreviousPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentPreviousPassword.setText("Previous Password:");

        lblStudentNewPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentNewPassword.setText("New Password:");

        lblStudentConfirmPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblStudentConfirmPassword.setText("Confirm Password:");

        btnUpdatePassword.setBackground(new java.awt.Color(102, 51, 0));
        btnUpdatePassword.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnUpdatePassword.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdatePassword.setText("UPDATE PASSWORD");
        btnUpdatePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePasswordActionPerformed(evt);
            }
        });

        previousPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        newPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        confirmNewPassword.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        btnSave.setBackground(new java.awt.Color(102, 51, 0));
        btnSave.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("UPDATE DETAILS");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentProfileJPanelLayout = new javax.swing.GroupLayout(studentProfileJPanel);
        studentProfileJPanel.setLayout(studentProfileJPanelLayout);
        studentProfileJPanelLayout.setHorizontalGroup(
            studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblStudentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtStudentRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblStudentAge, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStudentAge))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStudentName))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblStudentContact, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblStudentRegistered)))
                .addGap(22, 22, 22)
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStudentContact, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(txtStudentEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(txtStudentRegistered))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblStudentUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentProfileJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(300, 300, 300)))
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpdateCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblStudentPreviousPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStudentNewPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStudentConfirmPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdatePassword)
                            .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(previousPassword)
                                .addComponent(newPassword)
                                .addComponent(confirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        studentProfileJPanelLayout.setVerticalGroup(
            studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, studentProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblStudentUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtStudentAge, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblStudentAge, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblStudentRegistered, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStudentRegistered, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(29, 29, 29)
                                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblStudentContact)
                                            .addComponent(txtStudentContact, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(27, 27, 27)
                                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(32, 32, 32)
                                .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblStudentAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtStudentRegion))
                                .addGap(79, 79, 79)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(88, Short.MAX_VALUE))
                    .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblUpdateCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(studentProfileJPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(previousPassword))
                            .addComponent(lblStudentPreviousPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudentNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(studentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudentConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))))
        );

        studentTabbedPanel.addTab("Profile", studentProfileJPanel);

        studentCourseRegistrationJPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblSearchProfessor.setText("Search by Professor:");

        lblSearchTopic.setText("Search by Topic:");

        lblSearchRegion.setText("Search by Region:");

        lblSeachLanguage.setText("Search by Language:");

        comboCourseProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        comboCourseTopic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        comboCourseRegion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        comboCourseLangauge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tblCourseDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Professor", "Course Taught", "Course Id", "Region", "Language", "Rating", "Semester"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCourseDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblCourseDetails);
        if (tblCourseDetails.getColumnModel().getColumnCount() > 0) {
            tblCourseDetails.getColumnModel().getColumn(0).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(1).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(2).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(3).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(4).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(5).setResizable(false);
            tblCourseDetails.getColumnModel().getColumn(6).setResizable(false);
        }

        btnSearchCourse.setBackground(new java.awt.Color(102, 51, 0));
        btnSearchCourse.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnSearchCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchCourse.setText("SEARCH");
        btnSearchCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCourseActionPerformed(evt);
            }
        });

        btnAddCourse.setBackground(new java.awt.Color(102, 51, 0));
        btnAddCourse.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnAddCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCourse.setText("ADD COURSE");
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentCourseRegistrationJPanelLayout = new javax.swing.GroupLayout(studentCourseRegistrationJPanel);
        studentCourseRegistrationJPanel.setLayout(studentCourseRegistrationJPanelLayout);
        studentCourseRegistrationJPanelLayout.setHorizontalGroup(
            studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSearchTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeachLanguage))
                        .addGap(18, 18, 18)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboCourseLangauge, 0, 184, Short.MAX_VALUE)
                            .addComponent(comboCourseRegion, javax.swing.GroupLayout.Alignment.TRAILING, 0, 184, Short.MAX_VALUE)
                            .addComponent(comboCourseTopic, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboCourseProfessor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(btnSearchCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))))
        );

        studentCourseRegistrationJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboCourseLangauge, comboCourseProfessor, comboCourseRegion, comboCourseTopic});

        studentCourseRegistrationJPanelLayout.setVerticalGroup(
            studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchProfessor)
                            .addComponent(comboCourseProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchTopic)
                            .addComponent(comboCourseTopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchRegion)
                            .addComponent(comboCourseRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeachLanguage)
                            .addComponent(comboCourseLangauge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83)
                        .addComponent(btnSearchCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(studentCourseRegistrationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(studentCourseRegistrationJPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Course Registration", studentCourseRegistrationJPanel);

        studentViewCourseJPanel.setBackground(new java.awt.Color(255, 255, 255));

        tblViewRegisteredCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblViewRegisteredCourses);
        if (tblViewRegisteredCourses.getColumnModel().getColumnCount() > 0) {
            tblViewRegisteredCourses.getColumnModel().getColumn(3).setHeaderValue("Grade");
        }

        btnManageCourse.setBackground(new java.awt.Color(102, 51, 0));
        btnManageCourse.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnManageCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnManageCourse.setText("Manage ");
        btnManageCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCourseActionPerformed(evt);
            }
        });

        txtViewCourseID.setEditable(false);
        txtViewCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblViewCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblViewCourseID.setText("Course ID:");

        lblViewCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblViewCourseName.setText("Course Name:");

        txtViewCourseName.setEditable(false);
        txtViewCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblViewProfessorName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblViewProfessorName.setText("Professor Name:");

        lblViewGradeRequest.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblViewGradeRequest.setText("Request for Grade:");

        txtViewProfessorName.setEditable(false);
        txtViewProfessorName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        comboGrade.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        comboGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));

        btnSubmitGradeRequest.setBackground(new java.awt.Color(102, 51, 0));
        btnSubmitGradeRequest.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnSubmitGradeRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmitGradeRequest.setText("Submit");
        btnSubmitGradeRequest.setEnabled(false);
        btnSubmitGradeRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitGradeRequestActionPerformed(evt);
            }
        });

        lblRequest.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        lblRequest.setForeground(new java.awt.Color(102, 51, 0));
        lblRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRequest.setText("Request for Course Grade");

        lblNote.setText("<html>Note: Please select Course and click on Manage to raise request for course grade and click on submit button</html>");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout studentViewCourseJPanelLayout = new javax.swing.GroupLayout(studentViewCourseJPanel);
        studentViewCourseJPanel.setLayout(studentViewCourseJPanelLayout);
        studentViewCourseJPanelLayout.setHorizontalGroup(
            studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentViewCourseJPanelLayout.createSequentialGroup()
                        .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                                .addComponent(lblViewCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(txtViewCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                                .addComponent(lblViewCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(txtViewCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                                        .addComponent(lblViewProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentViewCourseJPanelLayout.createSequentialGroup()
                                        .addComponent(lblViewGradeRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)))
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSubmitGradeRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtViewProfessorName, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                        .addComponent(comboGrade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(lblRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentViewCourseJPanelLayout.createSequentialGroup()
                        .addComponent(lblNote, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        studentViewCourseJPanelLayout.setVerticalGroup(
            studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                                .addComponent(lblRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblViewCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtViewCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblViewCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtViewCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblViewProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtViewProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblViewGradeRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(46, 46, 46)
                        .addGroup(studentViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnManageCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSubmitGradeRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentViewCourseJPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("View My Courses", studentViewCourseJPanel);

        studentDropCourseJPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblDropProfessorName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblDropProfessorName.setText("Professor Name:");

        txtDropCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtDropCourseName.setEnabled(false);

        lblDropCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblDropCourseName.setText("Course Name:");

        btnDropCourse.setBackground(new java.awt.Color(102, 51, 0));
        btnDropCourse.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnDropCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnDropCourse.setText("Drop");
        btnDropCourse.setEnabled(false);
        btnDropCourse.setOpaque(true);
        btnDropCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropCourseActionPerformed(evt);
            }
        });

        tblViewRegisteredCourseDrop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblViewRegisteredCourseDrop);
        if (tblViewRegisteredCourseDrop.getColumnModel().getColumnCount() > 0) {
            tblViewRegisteredCourseDrop.getColumnModel().getColumn(0).setResizable(false);
            tblViewRegisteredCourseDrop.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblViewRegisteredCourseDrop.getColumnModel().getColumn(1).setResizable(false);
            tblViewRegisteredCourseDrop.getColumnModel().getColumn(2).setResizable(false);
        }

        btnManageDropProfessor.setBackground(new java.awt.Color(102, 51, 0));
        btnManageDropProfessor.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnManageDropProfessor.setForeground(new java.awt.Color(255, 255, 255));
        btnManageDropProfessor.setText("Manage ");
        btnManageDropProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageDropProfessorActionPerformed(evt);
            }
        });

        txtDropProfessorName.setEnabled(false);

        txtDropCourseID.setEditable(false);
        txtDropCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N

        lblDropCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblDropCourseID.setText("Course ID:");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout studentDropCourseJPanelLayout = new javax.swing.GroupLayout(studentDropCourseJPanel);
        studentDropCourseJPanel.setLayout(studentDropCourseJPanelLayout);
        studentDropCourseJPanelLayout.setHorizontalGroup(
            studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDropCourseJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDropCourseJPanelLayout.createSequentialGroup()
                        .addComponent(btnDropCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDropCourseJPanelLayout.createSequentialGroup()
                        .addComponent(lblDropProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDropProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
            .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                        .addGap(900, 900, 900)
                        .addComponent(txtDropCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDropCourseJPanelLayout.createSequentialGroup()
                        .addComponent(lblDropCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(txtDropCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnManageDropProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(80, 80, 80)
                    .addComponent(lblDropCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(313, Short.MAX_VALUE)))
            .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                    .addGap(697, 697, 697)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(499, Short.MAX_VALUE)))
        );
        studentDropCourseJPanelLayout.setVerticalGroup(
            studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDropCourseJPanelLayout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDropProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDropProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDropCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDropCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(txtDropCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnDropCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183))
            .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                            .addGap(160, 160, 160)
                            .addComponent(lblDropCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(46, 46, 46)
                    .addComponent(btnManageDropProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
            .addGroup(studentDropCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentDropCourseJPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        studentTabbedPanel.addTab("Drop Course", studentDropCourseJPanel);

        studentRateProfessorJPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentRateProfessorJPanel.setForeground(new java.awt.Color(102, 51, 0));

        lblRateProfessorName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblRateProfessorName.setText("Professor Name:");

        txtRateCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtRateCourseName.setEnabled(false);

        lblRateCourseName.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblRateCourseName.setText("Course Taught:");

        btnSubmitRateProfessor.setBackground(new java.awt.Color(102, 51, 0));
        btnSubmitRateProfessor.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnSubmitRateProfessor.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmitRateProfessor.setText("Submit");
        btnSubmitRateProfessor.setEnabled(false);
        btnSubmitRateProfessor.setOpaque(true);
        btnSubmitRateProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitRateProfessorActionPerformed(evt);
            }
        });

        lblRateProfessor.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblRateProfessor.setText("Rate Professor:");

        tblViewRegisteredCoursesForGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblViewRegisteredCoursesForGrade);

        btnRateProfessor.setBackground(new java.awt.Color(102, 51, 0));
        btnRateProfessor.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnRateProfessor.setForeground(new java.awt.Color(255, 255, 255));
        btnRateProfessor.setText("Manage ");
        btnRateProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateProfessorActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtProfessorNameGrade.setEnabled(false);

        lblrequestgrade.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        lblrequestgrade.setForeground(new java.awt.Color(102, 51, 0));
        lblrequestgrade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblrequestgrade.setText("Rate the Professor");

        comboRateProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "1", "2", "3", "4", "5" }));

        lblGradeCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblGradeCourseID.setText("Course ID:");

        txtRateCourseID.setEditable(false);
        txtRateCourseID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtRateCourseID.setEnabled(false);

        javax.swing.GroupLayout studentRateProfessorJPanelLayout = new javax.swing.GroupLayout(studentRateProfessorJPanel);
        studentRateProfessorJPanel.setLayout(studentRateProfessorJPanelLayout);
        studentRateProfessorJPanelLayout.setHorizontalGroup(
            studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentRateProfessorJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentRateProfessorJPanelLayout.createSequentialGroup()
                                .addComponent(lblrequestgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentRateProfessorJPanelLayout.createSequentialGroup()
                                .addComponent(btnSubmitRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138))))
                    .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                                .addComponent(lblGradeCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(txtRateCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                                    .addComponent(lblRateCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtRateCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                                        .addComponent(lblRateProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtProfessorNameGrade))
                                    .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                                        .addComponent(lblRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboRateProfessor, 0, 244, Short.MAX_VALUE)))))
                        .addContainerGap(84, Short.MAX_VALUE))))
            .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                    .addGap(673, 673, 673)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(523, Short.MAX_VALUE)))
        );
        studentRateProfessorJPanelLayout.setVerticalGroup(
            studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(lblrequestgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGradeCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRateCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRateCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRateCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProfessorNameGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRateProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmitRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addComponent(btnRateProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(studentRateProfessorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentRateProfessorJPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        studentTabbedPanel.addTab("Rate My Professors", studentRateProfessorJPanel);

        studentDeclarationJPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentDeclarationJPanel.setForeground(new java.awt.Color(102, 51, 0));
        studentDeclarationJPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                studentDeclarationJPanelComponentShown(evt);
            }
        });

        text1.setText("Hello");

        text2.setText("<html>Please assert to the below letter and click on submit to raise a request for graduation.</html>");

        text3.setText("Note: You must have completed 8 courses, else the application will be rejected. Once a request is raised you may not eb able to submit again unless it's rejected.</html>");

        text4.setText("I");

        text5.setText(",am writing to formally request my graduation from Cloud Campus in the Master's program.");

        text6.setText("<html>I have completed all the necessary coursework, satisfied the requirements for my major. In accordance with the university's policies and procedures, I kindly request that you <br>process my graduation application and issue the necessary declaration to graduate letter. </html>");

        text7.setText("<html>Please confirm the receipt of this letter and the status of my graduation application at your earliest convenience. You can reach me at</html>");

        text8.setText("or");

        chkDeclaration.setText("<html> I assert that above information is right and I wish to proceed further.");

        text9.setText("<html>Sincerely, </html>");

        btnSubmitDeclaration.setBackground(new java.awt.Color(102, 51, 0));
        btnSubmitDeclaration.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        btnSubmitDeclaration.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmitDeclaration.setText("Submit");
        btnSubmitDeclaration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitDeclarationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentDeclarationJPanelLayout = new javax.swing.GroupLayout(studentDeclarationJPanel);
        studentDeclarationJPanel.setLayout(studentDeclarationJPanelLayout);
        studentDeclarationJPanelLayout.setHorizontalGroup(
            studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                        .addComponent(text7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDeclarationStudentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDeclarationStudentEmail))
                    .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                        .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                                .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDeclarationStudentName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(text6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                                .addComponent(text4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDeclarationStudentName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text5))
                            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDeclarationStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDeclarationStudentName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(415, 415, 415)
                                .addComponent(btnSubmitDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text3)
                .addContainerGap(79, Short.MAX_VALUE))
        );
        studentDeclarationJPanelLayout.setVerticalGroup(
            studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeclarationStudentName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(text3)
                .addGap(30, 30, 30)
                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeclarationStudentName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(text6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeclarationStudentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeclarationStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentDeclarationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(studentDeclarationJPanelLayout.createSequentialGroup()
                        .addComponent(chkDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(text9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDeclarationStudentName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDeclarationStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSubmitDeclaration, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Declaration Request", studentDeclarationJPanel);

        studentCertificateJPanel.setBackground(new java.awt.Color(255, 255, 255));
        studentCertificateJPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                studentCertificateJPanelComponentShown(evt);
            }
        });

        text10.setFont(new java.awt.Font("Cambria Math", 2, 18)); // NOI18N
        text10.setForeground(new java.awt.Color(102, 51, 0));
        text10.setText("This Certifies that");

        txtCertificateStudentName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        text11.setFont(new java.awt.Font("Cambria Math", 2, 18)); // NOI18N
        text11.setForeground(new java.awt.Color(102, 51, 0));
        text11.setText("<html>has completed all the requirements for graduation as prescribed by the <br>Board of Digital Education and is therefore entitled to this Diploma by</html>");

        professorPanelLabel1.setBackground(new java.awt.Color(255, 255, 255));
        professorPanelLabel1.setFont(new java.awt.Font("Cambria Math", 1, 36)); // NOI18N
        professorPanelLabel1.setForeground(new java.awt.Color(102, 51, 0));
        professorPanelLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        professorPanelLabel1.setText("GRADUATION CERTIFICATE");

        lblogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cloud-campus small logo 1.png"))); // NOI18N

        lblcertificateId.setForeground(new java.awt.Color(102, 51, 0));
        lblcertificateId.setText("Certificate ID:");

        javax.swing.GroupLayout studentCertificateJPanelLayout = new javax.swing.GroupLayout(studentCertificateJPanel);
        studentCertificateJPanel.setLayout(studentCertificateJPanelLayout);
        studentCertificateJPanelLayout.setHorizontalGroup(
            studentCertificateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                .addGroup(studentCertificateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(professorPanelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                        .addGap(539, 539, 539)
                        .addComponent(text10))
                    .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(lblogo)))
                .addContainerGap(254, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentCertificateJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(studentCertificateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentCertificateJPanelLayout.createSequentialGroup()
                        .addComponent(txtCertificateStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(439, 439, 439))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentCertificateJPanelLayout.createSequentialGroup()
                        .addComponent(text11, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(332, 332, 332))))
            .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                .addGap(443, 443, 443)
                .addComponent(lblcertificateId)
                .addGap(80, 80, 80)
                .addComponent(txtcertificateid, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        studentCertificateJPanelLayout.setVerticalGroup(
            studentCertificateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCertificateJPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(professorPanelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(text10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(txtCertificateStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(text11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(studentCertificateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcertificateId)
                    .addComponent(txtcertificateid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        studentTabbedPanel.addTab("Certificate", studentCertificateJPanel);

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addComponent(studentTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        splitPane.setRightComponent(studentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        homeJPanel.remove(this);
        CardLayout layout = (CardLayout) homeJPanel.getLayout();
        layout.previous(homeJPanel);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Boolean flag = true;
        int personId = Integer.parseInt(txtStudentID.getText());
        String name = txtStudentName.getText();
        if(name.matches("[a-zA-Z ]+") == false){
            JOptionPane.showMessageDialog(null, "Incorrect Name");
            flag = false;
            txtStudentName.setText("");
        }
        String email = txtStudentEmail.getText();
        if(email.matches("[a-zA-Z0-9.@]+[gmail|northeastern][.com|.edu]+") == false){
            JOptionPane.showMessageDialog(null, "Incorrect Email");
            flag = false;
            txtStudentEmail.setText("");
        }
        int age = Integer.parseInt(txtStudentAge.getText());
        if(age < 0 && age > 100){
            JOptionPane.showMessageDialog(null, "Incorrect Age");
            flag = false;
            txtStudentAge.setText("");
        }
        String region = txtStudentRegion.getText();
        if(region.matches("[a-zA-Z, ]+") == false){
            JOptionPane.showMessageDialog(null, "Incorrect Address");
            flag = false;
            txtStudentRegion.setText("");
        }
        String phno = txtStudentContact.getText();
        if(phno.matches("[0-9]{10}") == false){
            JOptionPane.showMessageDialog(null, "Incorrect PhoneNumber");
            flag = false;
            txtStudentContact.setText("");
        }
        Boolean updatePersonStatus = manageperson.updatePerson(personId, name, age, region, Long.parseLong(phno), email);
        if(flag == true && updatePersonStatus==true){
            student.setName(name);
            student.setAge(age);
            student.setRegion(region);
            student.setPhone(Long.parseLong(phno));
            student.setEmail(email);
            JOptionPane.showMessageDialog(null, "Student details updated successfully!");       
        }
        else{
            JOptionPane.showMessageDialog(null, "Error while updating Student details. Check the information before submitting!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdatePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePasswordActionPerformed
        Boolean flag = true;
        int personId = Integer.parseInt(txtStudentID.getText());
        String prevPassword =new String(previousPassword.getPassword());
        String password = new String(newPassword.getPassword());
        if(prevPassword.equals(password)){
            JOptionPane.showMessageDialog(null, "Previous password and new password cannot be same!");
            newPassword.setText("");
            flag = false;
        }
        if(password.matches("[a-zA-Z0-9@._-]{3,}") == false){
            JOptionPane.showMessageDialog(null, "Incorrect Password Format");
            newPassword.setText("");
            confirmNewPassword.setText("");
            flag = false;
        }
        String confirmpassword = new String(confirmNewPassword.getPassword());
        if(!password.equals(confirmpassword)){
            JOptionPane.showMessageDialog(null, "Confirm password doesnot match with set Password");
            confirmNewPassword.setText("");
            flag = false;
        }
        System.out.println(prevPassword +"--"+password+"--"+confirmpassword);
        Boolean checkExistingPassStatus = manageperson.checkExistingPass(personId, prevPassword);
        if(checkExistingPassStatus==false){
            JOptionPane.showMessageDialog(null, "Incorrect Previous Password!");
            previousPassword.setText("");
            flag = false;
        }
        
        if(flag == true){
            student.setPassword(password.toCharArray());
            Boolean updatePassStatus = manageperson.updatePassword(personId, password);
            if(updatePassStatus){
                JOptionPane.showMessageDialog(null, "Password updated Successfully");     
            }
            else{
                JOptionPane.showMessageDialog(null, "Error encountered while updating password. Try again!");     
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Re-enter details to update password Successfully");
        }
    }//GEN-LAST:event_btnUpdatePasswordActionPerformed

    private void btnSearchCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCourseActionPerformed
        // TODO add your handling code here:
        String professorName = comboCourseProfessor.getSelectedItem().toString();
        String course = comboCourseTopic.getSelectedItem().toString();
        String region = comboCourseRegion.getSelectedItem().toString();
        String language = comboCourseLangauge.getSelectedItem().toString();
        ArrayList <String> values = new ArrayList<>();
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
         conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            String query = 
    "SELECT p.personid, p.name, c.coursename, p.region, pr.langofinstruction, pr.ratingslist, c.semester, c.courseId " +
    "FROM Course c " +
    "JOIN Person p ON p.personid = c.professorassociated " +
    "JOIN Professor pr ON pr.professorid = c.professorassociated " +
    "WHERE c.coursename = '" + course + "' " +
    "UNION " +
    "SELECT p.personid, p.name, c.coursename, p.region, pr.langofinstruction, pr.ratingslist, c.semester, c.courseId " +
    "FROM Person p " +
    "JOIN Course c ON c.professorassociated = p.personId " +
    "JOIN Professor pr ON pr.professorid = p.personId " +
    "WHERE p.name = '" + professorName + "' " +
    "UNION " +
    "SELECT p.personid, p.name, c.coursename, p.region, pr.langofinstruction, pr.ratingslist, c.semester, c.courseId " +
    "FROM Person p " +
    "JOIN Course c ON c.professorassociated = p.personId " +
    "JOIN Professor pr ON pr.professorid = p.personId " +
    "WHERE p.region = '" + region + "' " +
    "UNION " +
    "SELECT p.personid, p.name, c.coursename, p.region, pr.langofinstruction, pr.ratingslist, c.semester, c.courseId " +
    "FROM Professor pr " +
    "JOIN Course c ON c.professorassociated = pr.professorid " +
    "JOIN Person p ON p.personId = pr.professorId " +
    "WHERE pr.langofinstruction = '" + language + "';";
            ResultSet resultSet = statement.executeQuery(query);
            while (resultSet.next()) {
                String Id = String.valueOf(resultSet.getInt("personId"));
                String name = resultSet.getString("name");
                String courseName = resultSet.getString("courseName");
                String regionName = resultSet.getString("region");
                String courseId = String.valueOf(resultSet.getInt("courseId"));
                String languageName = resultSet.getString("langOfInstruction");
                String semester = resultSet.getString("semester");
                String input = resultSet.getString("ratingsList");
                int sum = 0;
                int count = 0;
                for (String value : input.split(",")) {
                    int intValue = Integer.parseInt(value.trim());
                    sum += intValue;
                    count++;
                }
                String rating = String.valueOf((double) sum / count);
                DecimalFormat df = new DecimalFormat("#.##");
                rating = df.format(Double.parseDouble(rating));
                String record = name + "," + courseName + "," + courseId + "," + regionName + "," + languageName + "," + rating + "," + semester;
                values.add(record);     
            }
            populateTable(values);
            }
        catch (SQLException ex) {
            Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSearchCourseActionPerformed

    private void btnSubmitDeclarationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitDeclarationActionPerformed
        // TODO add your handling code here:
        int id = student.getPersonId();
        if(chkDeclaration.isSelected()){
            try{
                SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
         conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            String query = "UPDATE Student SET wanttograduate = 1 WHERE studentid = (SELECT personid FROM Person WHERE personid = "+id+");";
            statement.execute(query);
            conn.commit();
            JOptionPane.showMessageDialog(null, "Declaration request sent");
            }
        catch (SQLException ex) {
            Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the checkbox if you want to request for Declaration to Graduate");
        }
    }//GEN-LAST:event_btnSubmitDeclarationActionPerformed
            
    
    private void btnManageCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCourseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblViewRegisteredCourses.getSelectedRow();
        btnSubmitGradeRequest.setEnabled(true);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblViewRegisteredCourses.getModel();
            txtViewCourseID.setText((String)model.getValueAt(selectedRowIndex, 0));
            txtViewCourseName.setText((String)model.getValueAt(selectedRowIndex, 1));
            txtViewProfessorName.setText((String)model.getValueAt(selectedRowIndex, 2));
        }
    }//GEN-LAST:event_btnManageCourseActionPerformed

    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCourseDetails.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblCourseDetails.getModel();
            try{
                SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
         conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            conn.setAutoCommit(false);
            String Name = (String)model.getValueAt(selectedRowIndex, 1);
            String cid = (String)model.getValueAt(selectedRowIndex, 2);
            String query = "SELECT classCapacity FROM COURSE WHERE courseId = "+cid+" AND courseName ='"+Name+"';";
            ResultSet rs = statement.executeQuery(query);
            int classcount = rs.getInt("classCapacity");
            int id = student.getPersonId();
            float gpa = -1;
            String semester = (String)model.getValueAt(selectedRowIndex, 6);
            if(classcount>0){
                String insertquery = "INSERT INTO STUDENTCOURSE VALUES("+cid+","+id+","+gpa+",'"+semester+"');";
                statement.execute(insertquery);
                conn.commit();  
                classcount = classcount-1;
                String updatequery1 = "UPDATE Course SET classCapacity = "+classcount+" WHERE courseId = "+cid+" AND courseName ='"+Name+"';";
                statement.execute(updatequery1);
                conn.commit(); 
                displayViewCourseDetails();
                displayDropProfessorDetails();
                displayRateProfessorDetails();
                JOptionPane.showMessageDialog(null, "Course Added");
            }
            else{
                JOptionPane.showMessageDialog(null, "SORRY! Class is Full");
            }
            } catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void studentDeclarationJPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_studentDeclarationJPanelComponentShown
        // TODO add your handling code here:
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
            conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            int id = student.getPersonId();
            String query = "SELECT count(*) as count FROM StudentCourse WHERE studentId ='"+id+"' AND gradePointAchieved != -1;";
            ResultSet rs = statement.executeQuery(query);
            if((Integer.parseInt(rs.getString("count"))<8)){
                btnSubmitDeclaration.setEnabled(false);
                JOptionPane.showMessageDialog(null, "You must complete atleast 8 courses to graduate");
            }
            else if((Integer.parseInt(rs.getString("count"))>=8)){
                String query2 = "SELECT certificateIssued FROM Student WHERE studentId ='"+id+"';";
                ResultSet rs2 = statement.executeQuery(query2);
                if(rs2.getInt("certificateIssued") == 1){
                btnSubmitDeclaration.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Your Certificate has been issued");
                }
                else{
                btnSubmitDeclaration.setEnabled(true);
            }
            }
        }   
        catch (SQLException ex) {
            Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_studentDeclarationJPanelComponentShown

    private void studentCertificateJPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_studentCertificateJPanelComponentShown
        // TODO add your handling code here:
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
            conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            int id = student.getPersonId();
             String query1 = "SELECT certificateIssued FROM STUDENT WHERE studentId ="+id+";";
                ResultSet rs1 = statement.executeQuery(query1);
                int certissued = rs1.getInt("certificateIssued");
                if( certissued == 1){
                    String query2 = "SELECT certificateId FROM CERTIFICATE WHERE issuedToStudent ="+id+";";
                    ResultSet rs2 = statement.executeQuery(query2);
                    int certid = rs2.getInt("certificateId");
                    txtCertificateStudentName.setEditable(false);
                    txtcertificateid.setEditable(false);
                    txtCertificateStudentName.setText(student.getName());
                    txtcertificateid.setText(String.valueOf(certid));
                }
                else{
                    txtCertificateStudentName.setEnabled(false);
                    txtcertificateid.setEnabled(false);
                }
        } catch (SQLException ex) {
            Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_studentCertificateJPanelComponentShown

    private void btnSubmitGradeRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitGradeRequestActionPerformed
        // TODO add your handling code here:
            try{
                if(comboGrade.getSelectedItem().toString().equalsIgnoreCase("Yes")){
                    SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
                Statement statement = conn.createStatement();
                conn.setAutoCommit(false);
                int id = student.getPersonId();
                int cid = Integer.parseInt(txtViewCourseID.getText());
                String updatequery1 = "UPDATE StudentCourse SET gradePointAchieved = 0 WHERE courseId = "+cid+" AND studentid = "+id+";";
                statement.execute(updatequery1);
                conn.commit();
                displayViewCourseDetails();
                JOptionPane.showMessageDialog(null, "Request for Grade raised");
                }
                else if(comboGrade.getSelectedItem().toString().equalsIgnoreCase("No")){
                    JOptionPane.showMessageDialog(null, "Request for Grade not raised as option selected is No");            
                }
            } catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSubmitGradeRequestActionPerformed

    private void btnRateProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateProfessorActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblViewRegisteredCoursesForGrade.getSelectedRow();
        btnSubmitRateProfessor.setEnabled(true);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblViewRegisteredCoursesForGrade.getModel();
            txtRateCourseID.setText((String)model.getValueAt(selectedRowIndex, 0));
            txtRateCourseName.setText((String)model.getValueAt(selectedRowIndex, 1));
            txtProfessorNameGrade.setText((String)model.getValueAt(selectedRowIndex, 2));
        }
    }//GEN-LAST:event_btnRateProfessorActionPerformed

    private void btnSubmitRateProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitRateProfessorActionPerformed
        // TODO add your handling code here:
         try{
                Statement statement;
                if(comboRateProfessor.getSelectedItem().toString().equalsIgnoreCase("None")){
                    JOptionPane.showMessageDialog(null, "Professor is not Rated as option selected is None");
                }
                else{
                    int rate = Integer.parseInt(comboRateProfessor.getSelectedItem().toString());
                    SQLiteDatabaseConnection.disconnect();
                    conn = SQLiteDatabaseConnection.connect();
                    statement = conn.createStatement();
                    conn.setAutoCommit(false);
                    String name = txtProfessorNameGrade.getText();
                    String query1 = "SELECT personId FROM PERSON WHERE name = '"+name+"';";
                    ResultSet rs =  statement.executeQuery(query1);
                    String id = rs.getString("personId");
                    SQLiteDatabaseConnection.disconnect();
                    conn = SQLiteDatabaseConnection.connect();
                    statement = conn.createStatement();
                    conn.setAutoCommit(false);
                    String query2 = "SELECT ratingsList FROM PROFESSOR WHERE professorId = "+id+";";
                    ResultSet rs2 =  statement.executeQuery(query2);
                    String listOfRating = rs2.getString("ratingsList");
                    String[] ratingsArray = listOfRating.split(",");
                    // Create a StringBuilder to build the modified string
                    StringBuilder modifiedRatings = new StringBuilder();
                    // Add the new value to the ratings
                    for (String rating : ratingsArray) {
                    modifiedRatings.append(rating).append(",");
                    }
                    modifiedRatings.append(rate);
                    // Convert the StringBuilder back to a string
                    String updatedRatingList = modifiedRatings.toString();
                    // Remove the trailing comma if needed
                    if (updatedRatingList.endsWith(",")) {
                    updatedRatingList = updatedRatingList.substring(0, updatedRatingList.length() - 1);
                    }
                    SQLiteDatabaseConnection.disconnect();
                    conn = SQLiteDatabaseConnection.connect();
                    statement = conn.createStatement();
                    conn.setAutoCommit(false);
                    String query3 = "UPDATE PROFESSOR SET ratingsList = '"+updatedRatingList+"' WHERE professorId ="+id+";";
                    statement.execute(query3);  
                    conn.commit();
                    JOptionPane.showMessageDialog(null, "Professor Rated");
                }
            } catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnSubmitRateProfessorActionPerformed

    private void btnDropCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropCourseActionPerformed
        // TODO add your handling code here:
      try{
          SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
                Statement statement = conn.createStatement();
                conn.setAutoCommit(false);
                int id = student.getPersonId();
                int cid = Integer.parseInt(txtDropCourseID.getText());
                String updatequery = "DELETE FROM StudentCourse WHERE courseId = "+cid+" AND studentid = "+id+";";
                statement.execute(updatequery);
                conn.commit();
                displayDropProfessorDetails();
                displayViewCourseDetails();
                displayRateProfessorDetails();
                JOptionPane.showMessageDialog(null, "Course Dropped");
            } catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnDropCourseActionPerformed

    private void btnManageDropProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageDropProfessorActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblViewRegisteredCourseDrop.getSelectedRow();
        btnDropCourse.setEnabled(true);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblViewRegisteredCourseDrop.getModel();
            txtDropCourseID.setText((String)model.getValueAt(selectedRowIndex, 0));
            txtDropCourseName.setText((String)model.getValueAt(selectedRowIndex, 1));
            txtDropProfessorName.setText((String)model.getValueAt(selectedRowIndex, 2));
        }
    }//GEN-LAST:event_btnManageDropProfessorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnDropCourse;
    private javax.swing.JButton btnManageCourse;
    private javax.swing.JButton btnManageDropProfessor;
    private javax.swing.JButton btnRateProfessor;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchCourse;
    private javax.swing.JButton btnSubmitDeclaration;
    private javax.swing.JButton btnSubmitGradeRequest;
    private javax.swing.JButton btnSubmitRateProfessor;
    private javax.swing.JButton btnUpdatePassword;
    private javax.swing.JCheckBox chkDeclaration;
    private javax.swing.JComboBox<String> comboCourseLangauge;
    private javax.swing.JComboBox<String> comboCourseProfessor;
    private javax.swing.JComboBox<String> comboCourseRegion;
    private javax.swing.JComboBox<String> comboCourseTopic;
    private javax.swing.JComboBox<String> comboGrade;
    private javax.swing.JComboBox<String> comboRateProfessor;
    private javax.swing.JPasswordField confirmNewPassword;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblDropCourseID;
    private javax.swing.JLabel lblDropCourseName;
    private javax.swing.JLabel lblDropProfessorName;
    private javax.swing.JLabel lblGradeCourseID;
    private javax.swing.JLabel lblNote;
    private javax.swing.JLabel lblRateCourseName;
    private javax.swing.JLabel lblRateProfessor;
    private javax.swing.JLabel lblRateProfessorName;
    private javax.swing.JLabel lblRequest;
    private javax.swing.JLabel lblSeachLanguage;
    private javax.swing.JLabel lblSearchProfessor;
    private javax.swing.JLabel lblSearchRegion;
    private javax.swing.JLabel lblSearchTopic;
    private javax.swing.JLabel lblStudentAddress;
    private javax.swing.JLabel lblStudentAge;
    private javax.swing.JLabel lblStudentConfirmPassword;
    private javax.swing.JLabel lblStudentContact;
    private javax.swing.JLabel lblStudentEmail;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblStudentNewPassword;
    private javax.swing.JLabel lblStudentPreviousPassword;
    private javax.swing.JLabel lblStudentRegistered;
    private javax.swing.JLabel lblStudentUpdate;
    private javax.swing.JLabel lblUpdateCredentials;
    private javax.swing.JLabel lblViewCourseID;
    private javax.swing.JLabel lblViewCourseName;
    private javax.swing.JLabel lblViewGradeRequest;
    private javax.swing.JLabel lblViewProfessorName;
    private javax.swing.JLabel lblcertificateId;
    private javax.swing.JLabel lblogo;
    private javax.swing.JLabel lblrequestgrade;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField previousPassword;
    private javax.swing.JLabel professorPanelLabel;
    private javax.swing.JLabel professorPanelLabel1;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel studentCertificateJPanel;
    private javax.swing.JPanel studentCourseRegistrationJPanel;
    private javax.swing.JPanel studentDeclarationJPanel;
    private javax.swing.JPanel studentDropCourseJPanel;
    private javax.swing.JPanel studentHomeJPanel;
    private javax.swing.JLabel studentHomeLabel;
    private javax.swing.JLabel studentHomeLogo;
    private javax.swing.JPanel studentLogoPanel;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JPanel studentProfileJPanel;
    private javax.swing.JPanel studentRateProfessorJPanel;
    private javax.swing.JTabbedPane studentTabbedPanel;
    private javax.swing.JPanel studentViewCourseJPanel;
    private javax.swing.JTable tblCourseDetails;
    private javax.swing.JTable tblViewRegisteredCourseDrop;
    private javax.swing.JTable tblViewRegisteredCourses;
    private javax.swing.JTable tblViewRegisteredCoursesForGrade;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text10;
    private javax.swing.JLabel text11;
    private javax.swing.JLabel text2;
    private javax.swing.JLabel text3;
    private javax.swing.JLabel text4;
    private javax.swing.JLabel text5;
    private javax.swing.JLabel text6;
    private javax.swing.JLabel text7;
    private javax.swing.JLabel text8;
    private javax.swing.JLabel text9;
    private javax.swing.JTextField txtCertificateStudentName;
    private javax.swing.JTextField txtDeclarationStudentEmail;
    private javax.swing.JTextField txtDeclarationStudentID;
    private javax.swing.JTextField txtDeclarationStudentName1;
    private javax.swing.JTextField txtDeclarationStudentName2;
    private javax.swing.JTextField txtDeclarationStudentName3;
    private javax.swing.JTextField txtDeclarationStudentPhone;
    private javax.swing.JTextField txtDropCourseID;
    private javax.swing.JTextField txtDropCourseName;
    private javax.swing.JTextField txtDropProfessorName;
    private javax.swing.JTextField txtProfessorNameGrade;
    private javax.swing.JTextField txtRateCourseID;
    private javax.swing.JTextField txtRateCourseName;
    private javax.swing.JTextField txtStudentAge;
    private javax.swing.JTextField txtStudentContact;
    private javax.swing.JTextField txtStudentEmail;
    private javax.swing.JTextField txtStudentID;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtStudentRegion;
    private javax.swing.JTextField txtStudentRegistered;
    private javax.swing.JTextField txtViewCourseID;
    private javax.swing.JTextField txtViewCourseName;
    private javax.swing.JTextField txtViewProfessorName;
    private javax.swing.JTextField txtcertificateid;
    // End of variables declaration//GEN-END:variables

    private void findStudent(){
        int id = managestudent.getLoggedStudentID();
        student = managestudent.searchStudent(id);
    }
    
    private void displayStudentProfileDetails() {
        txtStudentID.setText(String.valueOf(student.getPersonId()));
        txtStudentName.setText(student.getName());
        txtStudentAge.setText(String.valueOf(student.getAge()));
        txtStudentRegion.setText(student.getRegion());
        txtStudentContact.setText(String.valueOf(student.getPhone()));
        txtStudentEmail.setText(student.getEmail());
        if(!student.getCoursesRegisteredList().isEmpty()){
            txtStudentRegistered.setText("YES");
        }
        else{
           txtStudentRegistered.setText("NO"); 
        }
        txtStudentID.setEnabled(false);
        txtStudentRegistered.setEnabled(false);
   }

    private void displayCourseRegistrationDetails() {
        ArrayList<String> professorNameList = manageprofessor.getProfessorNameList();
        for(String item : professorNameList){
            comboCourseProfessor.addItem(item);
        }
        ArrayList<String> professorLanguage = manageprofessor.getProfessorLanguage();
        for(String item : professorLanguage){
            comboCourseLangauge.addItem(item);
        }
        ArrayList<String> professorLocation = manageprofessor.getProfessorLocation();
        for(String item : professorLocation){
            comboCourseRegion.addItem(item);
        }
        ArrayList<String> courseName = managecourse.getCourseNameList();
        for(String item : courseName){
            comboCourseTopic.addItem(item);
        }
    }

    private void populateTable(ArrayList values){
        ArrayList <String> recordlist = values;
        DefaultTableModel dtm = (DefaultTableModel) tblCourseDetails.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[7];
        for (String record : recordlist) {
        String[] recordValues = record.split(",");
        row[0]= recordValues[0];
        row[1] = recordValues[1];
        row[2]= recordValues[2];
        row[3]= recordValues[3];
        row[4]= recordValues[4];
        row[5] = recordValues[5];
        row[6]= recordValues[6];
        dtm.addRow(row); 
        }
    }
    
    private void displayViewCourseDetails() {
        ArrayList <String> values = new ArrayList<>();
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
            Statement statement = conn.createStatement();
             conn.setAutoCommit(false);
            int id = student.getPersonId();
            String query = "SELECT DISTINCT sc.courseId, c.coursename, p.name, sc.gradepointachieved FROM StudentCourse sc " +
            "JOIN Professor pr ON pr.professorid = c.professorAssociated " +
            "JOIN Person p ON p.personId = c.professorAssociated " +
            "JOIN Course c ON c.courseId = sc.courseId " +
            "WHERE sc.studentid = " + id + ";";
            ResultSet resultSet = statement.executeQuery(query);
            while (resultSet.next()) {
            int Id = resultSet.getInt("courseId");
            String courseName = resultSet.getString("courseName");
            String profName = resultSet.getString("name");
            float gpa = resultSet.getFloat("gradePointAchieved");
            String record = Id + "," + courseName + "," + profName + "," + gpa;
            values.add(record);
            }
            } 
            catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        populateCourseTable(values);
    }

    private void displayRateProfessorDetails() {
        ArrayList <String> values = new ArrayList<>();
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
         conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            int id = student.getPersonId();
            String query = "SELECT DISTINCT sc.courseId, c.coursename, p.name FROM StudentCourse sc " +
            "JOIN Professor pr ON pr.professorid = c.professorAssociated " +
            "JOIN Person p ON p.personId = c.professorAssociated " +
            "JOIN Course c ON c.courseId = sc.courseId " +
            "WHERE sc.studentid = " + id + ";";
            ResultSet resultSet = statement.executeQuery(query);
            while (resultSet.next()) {
            int Id = resultSet.getInt("courseId");
            String courseName = resultSet.getString("courseName");
            String profName = resultSet.getString("name");
            String record = Id + "," + courseName + "," + profName;
            values.add(record);
            }
            } 
            catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        populateCourseTableGrade(values);
    }

    private void displayDeclarationDetails() {
        txtDeclarationStudentName1.setText(student.getName());
        txtDeclarationStudentName2.setText(student.getName());
        txtDeclarationStudentName3.setText(student.getName());
        txtDeclarationStudentPhone.setText(String.valueOf(student.getPhone()));
        txtDeclarationStudentEmail.setText(student.getEmail());
        txtDeclarationStudentID.setText(String.valueOf(student.getPersonId()));
        txtDeclarationStudentName1.setEnabled(false);
        txtDeclarationStudentName2.setEnabled(false);
        txtDeclarationStudentName3.setEnabled(false);
        txtDeclarationStudentPhone.setEnabled(false);
        txtDeclarationStudentEmail.setEnabled(false);
        txtDeclarationStudentID.setEnabled(false);
    }    

    private void populateCourseTable(ArrayList<String> values) {
        ArrayList <String> recordlist = values;
        DefaultTableModel dtm = (DefaultTableModel) tblViewRegisteredCourses.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[4];
        for (String record : recordlist) {
            String[] recordValues = record.split(",");
            row[0]= recordValues[0];
            row[1] = recordValues[1];
            row[2]= recordValues[2];
            row[3]= recordValues[3];
            dtm.addRow(row);
        }
    }
    
    private void populateCourseTableGrade(ArrayList<String> values) {
        ArrayList <String> recordlist = values;
        DefaultTableModel dtm = (DefaultTableModel) tblViewRegisteredCoursesForGrade.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[3];
        for (String record : recordlist) {
            String[] recordValues = record.split(",");
            row[0]= recordValues[0];
            row[1] = recordValues[1];
            row[2]= recordValues[2];
            dtm.addRow(row);
        }
    }
    
    private void displayDropProfessorDetails() {
        ArrayList <String> values = new ArrayList<>();
        try{
            SQLiteDatabaseConnection.disconnect();
        conn = SQLiteDatabaseConnection.connect();
         conn.setAutoCommit(false);
            Statement statement = conn.createStatement();
            int id = student.getPersonId();
            String query = "SELECT DISTINCT sc.courseId, c.coursename, p.name FROM StudentCourse sc " +
            "JOIN Professor pr ON pr.professorid = c.professorAssociated " +
            "JOIN Person p ON p.personId = c.professorAssociated " +
            "JOIN Course c ON c.courseId = sc.courseId " +
            "WHERE sc.studentid = " + id + ";";
            ResultSet resultSet = statement.executeQuery(query);
            while (resultSet.next()) {
            int Id = resultSet.getInt("courseId");
            String courseName = resultSet.getString("courseName");
            String profName = resultSet.getString("name");
            String record = Id + "," + courseName + "," + profName;
            values.add(record);
            }
            } 
            catch (SQLException ex) {
                Logger.getLogger(StudentJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        populateDropCourseTableGrade(values);
    }
    
    private void populateDropCourseTableGrade(ArrayList<String> values) {
        ArrayList <String> recordlist = values;
        DefaultTableModel dtm = (DefaultTableModel) tblViewRegisteredCourseDrop.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[3];
        for (String record : recordlist) {
            String[] recordValues = record.split(",");
            row[0]= recordValues[0];
            row[1] = recordValues[1];
            row[2]= recordValues[2];
            dtm.addRow(row);
        }
    }
}
